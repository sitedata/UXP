<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" class="reftest-wait" onload="startTest()" version="1.1"><title>Testing that dynamic changes to the element for a given ID are reflected in clip-path</title><defs><svg id="d"><rect width="100%" height="50%" fill="#0f0"/><rect width="100%" height="50%" y="50%" fill="red"/></svg></defs><rect width="100%" height="70%" y="30%" fill="#0f0"/><use id="u1" width="11%" height="100%" x="10%" clip-path="url(#r1)" xlink:href="#d"/><script>// force frame construction; test that parsing &quot;r1&quot; after frame construction // is still bound to &quot;u1&quot; eventually var rect = document.getElementById(&quot;u1&quot;).getBoundingClientRect();</script><clipPath id="r1"><rect width="100%" height="40%"/></clipPath><clipPath id="x"><rect width="100%" height="40%"/></clipPath><use id="u2" width="11%" height="100%" x="20%" clip-path="url(#r2)" xlink:href="#d"/><clipPath id="r3"><rect width="100%" height="100%"/></clipPath><clipPath id="r3"><rect width="100%" height="40%"/></clipPath><use id="u3" width="11%" height="100%" x="30%" clip-path="url(#r3)" xlink:href="#d"/><clipPath id="r4"><rect width="100%" height="100%"/></clipPath><clipPath id="r4"><rect width="100%" height="40%"/></clipPath><use id="u4" width="11%" height="100%" x="40%" clip-path="url(#r4)" xlink:href="#d"/><clipPath id="r5"><rect width="100%" height="100%"/></clipPath><use id="u5" width="11%" height="100%" x="50%" clip-path="url(#r5)" xlink:href="#d"/><clipPath id="r6"><rect width="100%" height="100%"/></clipPath><clipPath id="r6-2"><rect width="100%" height="40%"/></clipPath><use id="u6" width="11%" height="100%" x="60%" clip-path="url(#r6)" xlink:href="#d"/><clipPath id="r7"><rect width="100%" height="40%"/></clipPath><clipPath id="r7-2"><rect width="100%" height="100%"/></clipPath><use id="u7" width="11%" height="100%" x="70%" clip-path="url(#r7)" xlink:href="#d"/><clipPath id="r8-2"><rect width="100%" height="40%"/></clipPath><clipPath id="r8"><rect width="100%" height="100%"/></clipPath><use id="u8" width="11%" height="100%" x="80%" clip-path="url(#r8)" xlink:href="#d"/><rect width="11%" height="100%" fill="#0f0"/><rect width="11%" height="100%" x="90%" fill="#0f0"/><script>function startTest() { document.addEventListener(&quot;MozReftestInvalidate&quot;, doTest, false); setTimeout(doTest, 4000); // fallback for running outside reftest } function doTest() { // check that changing an id to &quot;r2&quot; lets u2 find it var r2 = document.getElementById(&quot;x&quot;); r2.setAttribute(&quot;id&quot;, &quot;r2&quot;); var rect = document.getElementById(&quot;u3&quot;).getBoundingClientRect(); // check that removing the bad r3 lets u3 find the good one var r3 = document.getElementById(&quot;r3&quot;); r3.parentNode.removeChild(r3); // check that renaming the bad r4 lets u4 find the good one var r4 = document.getElementById(&quot;r4&quot;); r4.removeAttribute(&quot;id&quot;); // check that changing u5&apos;s reference works var u5 = document.getElementById(&quot;u5&quot;); u5.setAttribute(&quot;clip-path&quot;, &quot;url(#r1)&quot;); // check that inserting a good element before the bad r6 works var r6 = document.getElementById(&quot;r6-2&quot;); r6.parentNode.removeChild(r6); r6.setAttribute(&quot;id&quot;, &quot;r6&quot;); document.documentElement.insertBefore(r6, document.documentElement.firstChild); // check that inserting a bad element after a good one doesn&apos;t break anything var r7 = document.getElementById(&quot;r7-2&quot;); r7.parentNode.removeChild(r7); r7.setAttribute(&quot;id&quot;, &quot;r7&quot;); document.documentElement.appendChild(r7); // check that renaming a good element to r8 works var r8 = document.getElementById(&quot;r8-2&quot;); r8.setAttribute(&quot;id&quot;, &quot;r8&quot;); document.documentElement.removeAttribute(&quot;class&quot;); }</script></svg>